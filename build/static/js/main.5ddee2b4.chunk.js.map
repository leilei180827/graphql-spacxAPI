{"version":3,"sources":["logo.png","components/launchItem.js","components/launch.js","components/detail.js","index.js"],"names":["module","exports","LaunchItem","launch","launch_success","className","flight_number","mission_name","Date","launch_date_local","toLocaleString","rocket","rocket_id","rocket_name","rocket_type","to","launchesQuery","gql","Launch","useQuery","loading","error","data","console","log","launches","map","item","key","launchDetail","Detail","props","match","params","parseInt","variables","launch_year","apolloClient","ApolloClient","uri","App","client","Fragment","src","logo","alt","exact","path","component","Component","render","document","getElementById"],"mappings":"oFAAAA,EAAOC,QAAU,IAA0B,kC,oLCoC5BC,EAlCI,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACdC,EAAiBD,EAAOC,eAC5B,0BAAMC,UAAU,oBAEhB,0BAAMA,UAAU,mBAElB,OACE,yBAAKA,UAAU,2BACb,yBAAKA,UAAU,WACb,yBAAKA,UAAU,UACb,yBAAKA,UAAU,cACb,6CAAmBF,EAAOG,eAC1B,2CAAiBH,EAAOI,cACxB,mCAAS,IAAIC,KAAKL,EAAOM,mBAAmBC,kBAC5C,sCAAYN,IAEd,yBAAKC,UAAU,cACb,sCAAYF,EAAOQ,OAAOC,WAC1B,0CAAgBT,EAAOQ,OAAOE,aAC9B,0CAAgBV,EAAOQ,OAAOG,eAGlC,yBAAKT,UAAU,uBACb,kBAAC,IAAD,CACEU,GAAE,kBAAaZ,EAAOG,eACtBD,UAAU,gCAFZ,c,ySCrBV,IAAMW,EAAgBC,YAAH,KA+BJC,EAfA,WAAO,IAAD,EACcC,YAASH,GAAlCI,EADW,EACXA,QAASC,EADE,EACFA,MAAOC,EADL,EACKA,KACxB,OAAIF,EAAgB,yCAChBC,EAAc,wCAClBE,QAAQC,IAAIF,GAEV,yBAAKjB,UAAU,kBACb,yBAAKA,UAAU,OACZiB,EAAKG,SAASC,KAAI,SAACC,GAAD,OACjB,kBAAC,EAAD,CAAYC,IAAKD,EAAKrB,cAAeH,OAAQwB,W,8WC1BvD,IAAME,EAAeZ,YAAH,KA4CHa,EA5BA,SAACC,GAAW,IACnBzB,EAAkByB,EAAMC,MAAMC,OAA9B3B,cACNA,EAAgB4B,SAAS5B,GAFD,MAGSa,YAASU,EAAc,CACtDM,UAAW,CAAE7B,mBADPc,EAHgB,EAGhBA,QAASC,EAHO,EAGPA,MAAOC,EAHA,EAGAA,KAGxB,GAAIF,EAAS,OAAO,yCACpB,GAAIC,EAAO,OAAO,gDAClB,IAAMjB,EAAiBkB,EAAKnB,OAAOC,eACjC,0BAAMC,UAAU,oBAEhB,0BAAMA,UAAU,mBAElB,OACE,yBAAKA,UAAU,aACb,wBAAIA,UAAU,eACZ,6CAAmBiB,EAAKnB,OAAOG,eAC/B,4CAAkBgB,EAAKnB,OAAOI,cAC9B,2CAAiBe,EAAKnB,OAAOiC,aAC7B,iDAAuBd,EAAKnB,OAAOM,mBACnC,8CAAoBL,GACpB,yCAAekB,EAAKnB,OAAOQ,OAAOC,WAClC,2CAAiBU,EAAKnB,OAAOQ,OAAOE,aACpC,2CAAiBS,EAAKnB,OAAOQ,OAAOG,gB,sDChCtCuB,EAAe,IAAIC,IAAa,CACpCC,IAAK,aAGDC,E,uKAEF,OACE,kBAAC,IAAD,CAAgBC,OAAQJ,GACtB,kBAAC,IAAMK,SAAP,KACE,yBAAKC,IAAKC,IAAMC,IAAI,SAASxC,UAAU,UACvC,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOyC,OAAK,EAACC,KAAK,yBAAyBC,UAAWlB,IACtD,kBAAC,IAAD,CAAOgB,OAAK,EAACC,KAAK,IAAIC,UAAW9B,W,GAR3B+B,aAgBlBC,iBAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.5ddee2b4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ab10d000.png\";","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nconst LaunchItem = ({ launch }) => {\r\n  const launch_success = launch.launch_success ? (\r\n    <span className=\"btn btn-success\"></span>\r\n  ) : (\r\n    <span className=\"btn btn-danger\"></span>\r\n  );\r\n  return (\r\n    <div className=\"col-9 col-md-6 col-lg-4\">\r\n      <div className=\"row box\">\r\n        <div className=\"col-9 \">\r\n          <div className=\"launch-box\">\r\n            <h4>Flight_number:{launch.flight_number}</h4>\r\n            <p>mission_name:{launch.mission_name}</p>\r\n            <p>date:{new Date(launch.launch_date_local).toLocaleString()}</p>\r\n            <p>success:{launch_success}</p>\r\n          </div>\r\n          <div className=\"rocket-box\">\r\n            <h4>Rocket:{launch.rocket.rocket_id}</h4>\r\n            <p>Rocket name:{launch.rocket.rocket_name}</p>\r\n            <p>Rocket type:{launch.rocket.rocket_type}</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-3 btn-container\">\r\n          <Link\r\n            to={`/detail/${launch.flight_number}`}\r\n            className=\"btn btn-secondary btn-detail\"\r\n          >\r\n            Detail\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default LaunchItem;\r\n","import React from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { gql } from \"apollo-boost\";\r\nimport LaunchItem from \"./launchItem\";\r\nconst launchesQuery = gql`\r\n  {\r\n    launches {\r\n      flight_number\r\n      mission_name\r\n      launch_year\r\n      launch_date_local\r\n      launch_success\r\n      rocket {\r\n        rocket_id\r\n        rocket_name\r\n        rocket_type\r\n      }\r\n    }\r\n  }\r\n`;\r\nconst Launch = () => {\r\n  const { loading, error, data } = useQuery(launchesQuery);\r\n  if (loading) return <p>Loading...</p>;\r\n  if (error) return <p>Error...</p>;\r\n  console.log(data);\r\n  return (\r\n    <div className=\"container my-2\">\r\n      <div className=\"row\">\r\n        {data.launches.map((item) => (\r\n          <LaunchItem key={item.flight_number} launch={item} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Launch;\r\n","import React from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { gql } from \"apollo-boost\";\r\nconst launchDetail = gql`\r\n  query launchQuery($flight_number: Int!) {\r\n    launch(flight_number: $flight_number) {\r\n      flight_number\r\n      mission_name\r\n      launch_year\r\n      launch_date_local\r\n      launch_success\r\n      rocket {\r\n        rocket_id\r\n        rocket_name\r\n        rocket_type\r\n      }\r\n    }\r\n  }\r\n`;\r\nconst Detail = (props) => {\r\n  let { flight_number } = props.match.params;\r\n  flight_number = parseInt(flight_number);\r\n  const { loading, error, data } = useQuery(launchDetail, {\r\n    variables: { flight_number },\r\n  });\r\n  if (loading) return <p>Loading...</p>;\r\n  if (error) return <p>Error happened...</p>;\r\n  const launch_success = data.launch.launch_success ? (\r\n    <span className=\"btn btn-success\"></span>\r\n  ) : (\r\n    <span className=\"btn btn-danger\"></span>\r\n  );\r\n  return (\r\n    <div className=\"container\">\r\n      <ul className=\"detail-list\">\r\n        <li>flight_number:{data.launch.flight_number}</li>\r\n        <li>mission_name:{data.launch.mission_name}</li>\r\n        <li>launch_year:{data.launch.launch_year}</li>\r\n        <li>launch_date_local:{data.launch.launch_date_local}</li>\r\n        <li>launch_success:{launch_success}</li>\r\n        <li>rocket_id:{data.launch.rocket.rocket_id}</li>\r\n        <li>rocket_name:{data.launch.rocket.rocket_name}</li>\r\n        <li>rocket_type:{data.launch.rocket.rocket_type}</li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\nexport default Detail;\r\n","import React, { Component } from \"react\";\r\nimport Launch from \"./components/launch\";\r\nimport Detail from \"./components/detail\";\r\nimport { render } from \"react-dom\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport ApolloClient from \"apollo-boost\";\r\nimport { ApolloProvider } from \"@apollo/react-hooks\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./app.css\";\r\nimport logo from \"./logo.png\";\r\nconst apolloClient = new ApolloClient({\r\n  uri: \"/graphql\",\r\n});\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <ApolloProvider client={apolloClient}>\r\n        <React.Fragment>\r\n          <img src={logo} alt=\"spaceX\" className=\"logo \" />\r\n          <Router>\r\n            <Route exact path=\"/detail/:flight_number\" component={Detail} />\r\n            <Route exact path=\"/\" component={Launch} />\r\n          </Router>\r\n        </React.Fragment>\r\n      </ApolloProvider>\r\n    );\r\n  }\r\n}\r\n\r\nrender(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}